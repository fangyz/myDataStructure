//选择排序，基本思想是每次选择序列中关键字最小的、此小的......并依次将选中的关键字放入序列左侧的第一个位置、第二个位置直到整个序列依次有序。
//选择排序可分为简单选择排序、堆排序

#include"sort.h"


//一.简单选择排序，平均时间复杂度为O(n^2)
void SimpleSelectSort(int *a,int length)
{
	int index;
	int i, j;
	int temp=0;
	for (i = 0; i < length; i++)
	{
		index = i;
		for (j = i; j < length-1; j++)
		{
			if (temp < a[j])
				index = j;
		}
		//得到无序区中最小的值
		if (index != i)
		{
			temp = a[i];
			a[i] = a[index];
			a[index] = temp;
		}
	}
}

/*二.堆选择排序
堆的性质如下
1、堆是一颗采用顺序存储的完全二叉树，K1是根节点。可将所有节点序号设置为Kn,满足Ki<=K2i,Ki<=K2i+1；
2、堆的根节点是关键字中最小值(最大值)，称为小根堆(大根堆)；
3、从根节点到每一叶子节点路径上的元素组成的序列都是递减或递增的；
4、堆中的任意子树也是堆。

堆排序步骤如下，假设这里是最小堆
1、对一组待排序的记录，按堆的定义建立堆；
2、取得堆顶最小值后，此时剩下的元素不是堆了，需要重新将剩下的元素构造成堆。
3、不断的重复步骤2，直到全部记录排好序为止。

现在关键问题是：如何建立堆，如何重新构造堆
*/
